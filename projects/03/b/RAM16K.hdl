// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    DMux4Way(in=true, sel=address[0..1], a=m0, b=m1, c=m2, d=m3);
    And(a=m0, b=load, out=c0);
    And(a=m1, b=load, out=c1);
    And(a=m2, b=load, out=c2);
    And(a=m3, b=load, out=c3);

    RAM4K(in=in, load=c0, address=address[2..13], out=m0o);
    RAM4K(in=in, load=c1, address=address[2..13], out=m1o);
    RAM4K(in=in, load=c2, address=address[2..13], out=m2o);
    RAM4K(in=in, load=c3, address=address[2..13], out=m3o);

    Mux4Way16(a=m0o, b=m1o, c=m2o, d=m3o, sel=address[0..1], out=out);
}
